// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: api.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "api.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace eve_tools {

namespace {

const ::google::protobuf::Descriptor* File_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  File_reflection_ = NULL;
const ::google::protobuf::Descriptor* EveTPMRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  EveTPMRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* EveTPMResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  EveTPMResponse_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_api_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_api_2eproto() {
  protobuf_AddDesc_api_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "api.proto");
  GOOGLE_CHECK(file != NULL);
  File_descriptor_ = file->message_type(0);
  static const int File_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(File, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(File, content_),
  };
  File_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      File_descriptor_,
      File::default_instance_,
      File_offsets_,
      -1,
      -1,
      -1,
      sizeof(File),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(File, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(File, _is_default_instance_));
  EveTPMRequest_descriptor_ = file->message_type(1);
  static const int EveTPMRequest_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EveTPMRequest, command_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EveTPMRequest, expectedfiles_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EveTPMRequest, inputfiles_),
  };
  EveTPMRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      EveTPMRequest_descriptor_,
      EveTPMRequest::default_instance_,
      EveTPMRequest_offsets_,
      -1,
      -1,
      -1,
      sizeof(EveTPMRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EveTPMRequest, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EveTPMRequest, _is_default_instance_));
  EveTPMResponse_descriptor_ = file->message_type(2);
  static const int EveTPMResponse_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EveTPMResponse, response_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EveTPMResponse, outputfiles_),
  };
  EveTPMResponse_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      EveTPMResponse_descriptor_,
      EveTPMResponse::default_instance_,
      EveTPMResponse_offsets_,
      -1,
      -1,
      -1,
      sizeof(EveTPMResponse),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EveTPMResponse, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EveTPMResponse, _is_default_instance_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_api_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      File_descriptor_, &File::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      EveTPMRequest_descriptor_, &EveTPMRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      EveTPMResponse_descriptor_, &EveTPMResponse::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_api_2eproto() {
  delete File::default_instance_;
  delete File_reflection_;
  delete EveTPMRequest::default_instance_;
  delete EveTPMRequest_reflection_;
  delete EveTPMResponse::default_instance_;
  delete EveTPMResponse_reflection_;
}

void protobuf_AddDesc_api_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_api_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\tapi.proto\022\teve_tools\"%\n\004File\022\014\n\004Name\030\001"
    " \001(\t\022\017\n\007Content\030\002 \001(\014\"\\\n\rEveTPMRequest\022\017"
    "\n\007Command\030\001 \001(\t\022\025\n\rExpectedFiles\030\002 \003(\t\022#"
    "\n\nInputFiles\030\003 \003(\0132\017.eve_tools.File\"H\n\016E"
    "veTPMResponse\022\020\n\010Response\030\001 \001(\014\022$\n\013Outpu"
    "tFiles\030\002 \003(\0132\017.eve_tools.Fileb\006proto3", 237);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "api.proto", &protobuf_RegisterTypes);
  File::default_instance_ = new File();
  EveTPMRequest::default_instance_ = new EveTPMRequest();
  EveTPMResponse::default_instance_ = new EveTPMResponse();
  File::default_instance_->InitAsDefaultInstance();
  EveTPMRequest::default_instance_->InitAsDefaultInstance();
  EveTPMResponse::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_api_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_api_2eproto {
  StaticDescriptorInitializer_api_2eproto() {
    protobuf_AddDesc_api_2eproto();
  }
} static_descriptor_initializer_api_2eproto_;

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int File::kNameFieldNumber;
const int File::kContentFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

File::File()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:eve_tools.File)
}

void File::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

File::File(const File& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:eve_tools.File)
}

void File::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

File::~File() {
  // @@protoc_insertion_point(destructor:eve_tools.File)
  SharedDtor();
}

void File::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  content_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void File::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* File::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return File_descriptor_;
}

const File& File::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_api_2eproto();
  return *default_instance_;
}

File* File::default_instance_ = NULL;

File* File::New(::google::protobuf::Arena* arena) const {
  File* n = new File;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void File::Clear() {
// @@protoc_insertion_point(message_clear_start:eve_tools.File)
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  content_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool File::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:eve_tools.File)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string Name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "eve_tools.File.Name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_Content;
        break;
      }

      // optional bytes Content = 2;
      case 2: {
        if (tag == 18) {
         parse_Content:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_content()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:eve_tools.File)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:eve_tools.File)
  return false;
#undef DO_
}

void File::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:eve_tools.File)
  // optional string Name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "eve_tools.File.Name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // optional bytes Content = 2;
  if (this->content().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->content(), output);
  }

  // @@protoc_insertion_point(serialize_end:eve_tools.File)
}

::google::protobuf::uint8* File::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:eve_tools.File)
  // optional string Name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "eve_tools.File.Name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // optional bytes Content = 2;
  if (this->content().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->content(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:eve_tools.File)
  return target;
}

int File::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:eve_tools.File)
  int total_size = 0;

  // optional string Name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // optional bytes Content = 2;
  if (this->content().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->content());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void File::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:eve_tools.File)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const File* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const File>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:eve_tools.File)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:eve_tools.File)
    MergeFrom(*source);
  }
}

void File::MergeFrom(const File& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:eve_tools.File)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.content().size() > 0) {

    content_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.content_);
  }
}

void File::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:eve_tools.File)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void File::CopyFrom(const File& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:eve_tools.File)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool File::IsInitialized() const {

  return true;
}

void File::Swap(File* other) {
  if (other == this) return;
  InternalSwap(other);
}
void File::InternalSwap(File* other) {
  name_.Swap(&other->name_);
  content_.Swap(&other->content_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata File::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = File_descriptor_;
  metadata.reflection = File_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// File

// optional string Name = 1;
void File::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& File::name() const {
  // @@protoc_insertion_point(field_get:eve_tools.File.Name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void File::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:eve_tools.File.Name)
}
 void File::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:eve_tools.File.Name)
}
 void File::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:eve_tools.File.Name)
}
 ::std::string* File::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:eve_tools.File.Name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* File::release_name() {
  // @@protoc_insertion_point(field_release:eve_tools.File.Name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void File::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:eve_tools.File.Name)
}

// optional bytes Content = 2;
void File::clear_content() {
  content_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& File::content() const {
  // @@protoc_insertion_point(field_get:eve_tools.File.Content)
  return content_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void File::set_content(const ::std::string& value) {
  
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:eve_tools.File.Content)
}
 void File::set_content(const char* value) {
  
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:eve_tools.File.Content)
}
 void File::set_content(const void* value, size_t size) {
  
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:eve_tools.File.Content)
}
 ::std::string* File::mutable_content() {
  
  // @@protoc_insertion_point(field_mutable:eve_tools.File.Content)
  return content_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* File::release_content() {
  // @@protoc_insertion_point(field_release:eve_tools.File.Content)
  
  return content_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void File::set_allocated_content(::std::string* content) {
  if (content != NULL) {
    
  } else {
    
  }
  content_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), content);
  // @@protoc_insertion_point(field_set_allocated:eve_tools.File.Content)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EveTPMRequest::kCommandFieldNumber;
const int EveTPMRequest::kExpectedFilesFieldNumber;
const int EveTPMRequest::kInputFilesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EveTPMRequest::EveTPMRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:eve_tools.EveTPMRequest)
}

void EveTPMRequest::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

EveTPMRequest::EveTPMRequest(const EveTPMRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:eve_tools.EveTPMRequest)
}

void EveTPMRequest::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  command_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

EveTPMRequest::~EveTPMRequest() {
  // @@protoc_insertion_point(destructor:eve_tools.EveTPMRequest)
  SharedDtor();
}

void EveTPMRequest::SharedDtor() {
  command_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void EveTPMRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EveTPMRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return EveTPMRequest_descriptor_;
}

const EveTPMRequest& EveTPMRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_api_2eproto();
  return *default_instance_;
}

EveTPMRequest* EveTPMRequest::default_instance_ = NULL;

EveTPMRequest* EveTPMRequest::New(::google::protobuf::Arena* arena) const {
  EveTPMRequest* n = new EveTPMRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EveTPMRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:eve_tools.EveTPMRequest)
  command_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  expectedfiles_.Clear();
  inputfiles_.Clear();
}

bool EveTPMRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:eve_tools.EveTPMRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string Command = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_command()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->command().data(), this->command().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "eve_tools.EveTPMRequest.Command"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_ExpectedFiles;
        break;
      }

      // repeated string ExpectedFiles = 2;
      case 2: {
        if (tag == 18) {
         parse_ExpectedFiles:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_expectedfiles()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->expectedfiles(this->expectedfiles_size() - 1).data(),
            this->expectedfiles(this->expectedfiles_size() - 1).length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "eve_tools.EveTPMRequest.ExpectedFiles"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_ExpectedFiles;
        if (input->ExpectTag(26)) goto parse_InputFiles;
        break;
      }

      // repeated .eve_tools.File InputFiles = 3;
      case 3: {
        if (tag == 26) {
         parse_InputFiles:
          DO_(input->IncrementRecursionDepth());
         parse_loop_InputFiles:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_inputfiles()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_loop_InputFiles;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:eve_tools.EveTPMRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:eve_tools.EveTPMRequest)
  return false;
#undef DO_
}

void EveTPMRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:eve_tools.EveTPMRequest)
  // optional string Command = 1;
  if (this->command().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->command().data(), this->command().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "eve_tools.EveTPMRequest.Command");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->command(), output);
  }

  // repeated string ExpectedFiles = 2;
  for (int i = 0; i < this->expectedfiles_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->expectedfiles(i).data(), this->expectedfiles(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "eve_tools.EveTPMRequest.ExpectedFiles");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->expectedfiles(i), output);
  }

  // repeated .eve_tools.File InputFiles = 3;
  for (unsigned int i = 0, n = this->inputfiles_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->inputfiles(i), output);
  }

  // @@protoc_insertion_point(serialize_end:eve_tools.EveTPMRequest)
}

::google::protobuf::uint8* EveTPMRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:eve_tools.EveTPMRequest)
  // optional string Command = 1;
  if (this->command().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->command().data(), this->command().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "eve_tools.EveTPMRequest.Command");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->command(), target);
  }

  // repeated string ExpectedFiles = 2;
  for (int i = 0; i < this->expectedfiles_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->expectedfiles(i).data(), this->expectedfiles(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "eve_tools.EveTPMRequest.ExpectedFiles");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->expectedfiles(i), target);
  }

  // repeated .eve_tools.File InputFiles = 3;
  for (unsigned int i = 0, n = this->inputfiles_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->inputfiles(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:eve_tools.EveTPMRequest)
  return target;
}

int EveTPMRequest::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:eve_tools.EveTPMRequest)
  int total_size = 0;

  // optional string Command = 1;
  if (this->command().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->command());
  }

  // repeated string ExpectedFiles = 2;
  total_size += 1 * this->expectedfiles_size();
  for (int i = 0; i < this->expectedfiles_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->expectedfiles(i));
  }

  // repeated .eve_tools.File InputFiles = 3;
  total_size += 1 * this->inputfiles_size();
  for (int i = 0; i < this->inputfiles_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->inputfiles(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EveTPMRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:eve_tools.EveTPMRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const EveTPMRequest* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const EveTPMRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:eve_tools.EveTPMRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:eve_tools.EveTPMRequest)
    MergeFrom(*source);
  }
}

void EveTPMRequest::MergeFrom(const EveTPMRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:eve_tools.EveTPMRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  expectedfiles_.MergeFrom(from.expectedfiles_);
  inputfiles_.MergeFrom(from.inputfiles_);
  if (from.command().size() > 0) {

    command_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.command_);
  }
}

void EveTPMRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:eve_tools.EveTPMRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EveTPMRequest::CopyFrom(const EveTPMRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:eve_tools.EveTPMRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EveTPMRequest::IsInitialized() const {

  return true;
}

void EveTPMRequest::Swap(EveTPMRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EveTPMRequest::InternalSwap(EveTPMRequest* other) {
  command_.Swap(&other->command_);
  expectedfiles_.UnsafeArenaSwap(&other->expectedfiles_);
  inputfiles_.UnsafeArenaSwap(&other->inputfiles_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata EveTPMRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = EveTPMRequest_descriptor_;
  metadata.reflection = EveTPMRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// EveTPMRequest

// optional string Command = 1;
void EveTPMRequest::clear_command() {
  command_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& EveTPMRequest::command() const {
  // @@protoc_insertion_point(field_get:eve_tools.EveTPMRequest.Command)
  return command_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void EveTPMRequest::set_command(const ::std::string& value) {
  
  command_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:eve_tools.EveTPMRequest.Command)
}
 void EveTPMRequest::set_command(const char* value) {
  
  command_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:eve_tools.EveTPMRequest.Command)
}
 void EveTPMRequest::set_command(const char* value, size_t size) {
  
  command_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:eve_tools.EveTPMRequest.Command)
}
 ::std::string* EveTPMRequest::mutable_command() {
  
  // @@protoc_insertion_point(field_mutable:eve_tools.EveTPMRequest.Command)
  return command_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* EveTPMRequest::release_command() {
  // @@protoc_insertion_point(field_release:eve_tools.EveTPMRequest.Command)
  
  return command_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void EveTPMRequest::set_allocated_command(::std::string* command) {
  if (command != NULL) {
    
  } else {
    
  }
  command_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), command);
  // @@protoc_insertion_point(field_set_allocated:eve_tools.EveTPMRequest.Command)
}

// repeated string ExpectedFiles = 2;
int EveTPMRequest::expectedfiles_size() const {
  return expectedfiles_.size();
}
void EveTPMRequest::clear_expectedfiles() {
  expectedfiles_.Clear();
}
 const ::std::string& EveTPMRequest::expectedfiles(int index) const {
  // @@protoc_insertion_point(field_get:eve_tools.EveTPMRequest.ExpectedFiles)
  return expectedfiles_.Get(index);
}
 ::std::string* EveTPMRequest::mutable_expectedfiles(int index) {
  // @@protoc_insertion_point(field_mutable:eve_tools.EveTPMRequest.ExpectedFiles)
  return expectedfiles_.Mutable(index);
}
 void EveTPMRequest::set_expectedfiles(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:eve_tools.EveTPMRequest.ExpectedFiles)
  expectedfiles_.Mutable(index)->assign(value);
}
 void EveTPMRequest::set_expectedfiles(int index, const char* value) {
  expectedfiles_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:eve_tools.EveTPMRequest.ExpectedFiles)
}
 void EveTPMRequest::set_expectedfiles(int index, const char* value, size_t size) {
  expectedfiles_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:eve_tools.EveTPMRequest.ExpectedFiles)
}
 ::std::string* EveTPMRequest::add_expectedfiles() {
  // @@protoc_insertion_point(field_add_mutable:eve_tools.EveTPMRequest.ExpectedFiles)
  return expectedfiles_.Add();
}
 void EveTPMRequest::add_expectedfiles(const ::std::string& value) {
  expectedfiles_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:eve_tools.EveTPMRequest.ExpectedFiles)
}
 void EveTPMRequest::add_expectedfiles(const char* value) {
  expectedfiles_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:eve_tools.EveTPMRequest.ExpectedFiles)
}
 void EveTPMRequest::add_expectedfiles(const char* value, size_t size) {
  expectedfiles_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:eve_tools.EveTPMRequest.ExpectedFiles)
}
 const ::google::protobuf::RepeatedPtrField< ::std::string>&
EveTPMRequest::expectedfiles() const {
  // @@protoc_insertion_point(field_list:eve_tools.EveTPMRequest.ExpectedFiles)
  return expectedfiles_;
}
 ::google::protobuf::RepeatedPtrField< ::std::string>*
EveTPMRequest::mutable_expectedfiles() {
  // @@protoc_insertion_point(field_mutable_list:eve_tools.EveTPMRequest.ExpectedFiles)
  return &expectedfiles_;
}

// repeated .eve_tools.File InputFiles = 3;
int EveTPMRequest::inputfiles_size() const {
  return inputfiles_.size();
}
void EveTPMRequest::clear_inputfiles() {
  inputfiles_.Clear();
}
const ::eve_tools::File& EveTPMRequest::inputfiles(int index) const {
  // @@protoc_insertion_point(field_get:eve_tools.EveTPMRequest.InputFiles)
  return inputfiles_.Get(index);
}
::eve_tools::File* EveTPMRequest::mutable_inputfiles(int index) {
  // @@protoc_insertion_point(field_mutable:eve_tools.EveTPMRequest.InputFiles)
  return inputfiles_.Mutable(index);
}
::eve_tools::File* EveTPMRequest::add_inputfiles() {
  // @@protoc_insertion_point(field_add:eve_tools.EveTPMRequest.InputFiles)
  return inputfiles_.Add();
}
::google::protobuf::RepeatedPtrField< ::eve_tools::File >*
EveTPMRequest::mutable_inputfiles() {
  // @@protoc_insertion_point(field_mutable_list:eve_tools.EveTPMRequest.InputFiles)
  return &inputfiles_;
}
const ::google::protobuf::RepeatedPtrField< ::eve_tools::File >&
EveTPMRequest::inputfiles() const {
  // @@protoc_insertion_point(field_list:eve_tools.EveTPMRequest.InputFiles)
  return inputfiles_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EveTPMResponse::kResponseFieldNumber;
const int EveTPMResponse::kOutputFilesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EveTPMResponse::EveTPMResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:eve_tools.EveTPMResponse)
}

void EveTPMResponse::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

EveTPMResponse::EveTPMResponse(const EveTPMResponse& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:eve_tools.EveTPMResponse)
}

void EveTPMResponse::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  response_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

EveTPMResponse::~EveTPMResponse() {
  // @@protoc_insertion_point(destructor:eve_tools.EveTPMResponse)
  SharedDtor();
}

void EveTPMResponse::SharedDtor() {
  response_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void EveTPMResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EveTPMResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return EveTPMResponse_descriptor_;
}

const EveTPMResponse& EveTPMResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_api_2eproto();
  return *default_instance_;
}

EveTPMResponse* EveTPMResponse::default_instance_ = NULL;

EveTPMResponse* EveTPMResponse::New(::google::protobuf::Arena* arena) const {
  EveTPMResponse* n = new EveTPMResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EveTPMResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:eve_tools.EveTPMResponse)
  response_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  outputfiles_.Clear();
}

bool EveTPMResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:eve_tools.EveTPMResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes Response = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_response()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_OutputFiles;
        break;
      }

      // repeated .eve_tools.File OutputFiles = 2;
      case 2: {
        if (tag == 18) {
         parse_OutputFiles:
          DO_(input->IncrementRecursionDepth());
         parse_loop_OutputFiles:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_outputfiles()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_loop_OutputFiles;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:eve_tools.EveTPMResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:eve_tools.EveTPMResponse)
  return false;
#undef DO_
}

void EveTPMResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:eve_tools.EveTPMResponse)
  // optional bytes Response = 1;
  if (this->response().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->response(), output);
  }

  // repeated .eve_tools.File OutputFiles = 2;
  for (unsigned int i = 0, n = this->outputfiles_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->outputfiles(i), output);
  }

  // @@protoc_insertion_point(serialize_end:eve_tools.EveTPMResponse)
}

::google::protobuf::uint8* EveTPMResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:eve_tools.EveTPMResponse)
  // optional bytes Response = 1;
  if (this->response().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->response(), target);
  }

  // repeated .eve_tools.File OutputFiles = 2;
  for (unsigned int i = 0, n = this->outputfiles_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->outputfiles(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:eve_tools.EveTPMResponse)
  return target;
}

int EveTPMResponse::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:eve_tools.EveTPMResponse)
  int total_size = 0;

  // optional bytes Response = 1;
  if (this->response().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->response());
  }

  // repeated .eve_tools.File OutputFiles = 2;
  total_size += 1 * this->outputfiles_size();
  for (int i = 0; i < this->outputfiles_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->outputfiles(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EveTPMResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:eve_tools.EveTPMResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const EveTPMResponse* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const EveTPMResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:eve_tools.EveTPMResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:eve_tools.EveTPMResponse)
    MergeFrom(*source);
  }
}

void EveTPMResponse::MergeFrom(const EveTPMResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:eve_tools.EveTPMResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  outputfiles_.MergeFrom(from.outputfiles_);
  if (from.response().size() > 0) {

    response_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.response_);
  }
}

void EveTPMResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:eve_tools.EveTPMResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EveTPMResponse::CopyFrom(const EveTPMResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:eve_tools.EveTPMResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EveTPMResponse::IsInitialized() const {

  return true;
}

void EveTPMResponse::Swap(EveTPMResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EveTPMResponse::InternalSwap(EveTPMResponse* other) {
  response_.Swap(&other->response_);
  outputfiles_.UnsafeArenaSwap(&other->outputfiles_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata EveTPMResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = EveTPMResponse_descriptor_;
  metadata.reflection = EveTPMResponse_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// EveTPMResponse

// optional bytes Response = 1;
void EveTPMResponse::clear_response() {
  response_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& EveTPMResponse::response() const {
  // @@protoc_insertion_point(field_get:eve_tools.EveTPMResponse.Response)
  return response_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void EveTPMResponse::set_response(const ::std::string& value) {
  
  response_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:eve_tools.EveTPMResponse.Response)
}
 void EveTPMResponse::set_response(const char* value) {
  
  response_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:eve_tools.EveTPMResponse.Response)
}
 void EveTPMResponse::set_response(const void* value, size_t size) {
  
  response_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:eve_tools.EveTPMResponse.Response)
}
 ::std::string* EveTPMResponse::mutable_response() {
  
  // @@protoc_insertion_point(field_mutable:eve_tools.EveTPMResponse.Response)
  return response_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* EveTPMResponse::release_response() {
  // @@protoc_insertion_point(field_release:eve_tools.EveTPMResponse.Response)
  
  return response_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void EveTPMResponse::set_allocated_response(::std::string* response) {
  if (response != NULL) {
    
  } else {
    
  }
  response_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), response);
  // @@protoc_insertion_point(field_set_allocated:eve_tools.EveTPMResponse.Response)
}

// repeated .eve_tools.File OutputFiles = 2;
int EveTPMResponse::outputfiles_size() const {
  return outputfiles_.size();
}
void EveTPMResponse::clear_outputfiles() {
  outputfiles_.Clear();
}
const ::eve_tools::File& EveTPMResponse::outputfiles(int index) const {
  // @@protoc_insertion_point(field_get:eve_tools.EveTPMResponse.OutputFiles)
  return outputfiles_.Get(index);
}
::eve_tools::File* EveTPMResponse::mutable_outputfiles(int index) {
  // @@protoc_insertion_point(field_mutable:eve_tools.EveTPMResponse.OutputFiles)
  return outputfiles_.Mutable(index);
}
::eve_tools::File* EveTPMResponse::add_outputfiles() {
  // @@protoc_insertion_point(field_add:eve_tools.EveTPMResponse.OutputFiles)
  return outputfiles_.Add();
}
::google::protobuf::RepeatedPtrField< ::eve_tools::File >*
EveTPMResponse::mutable_outputfiles() {
  // @@protoc_insertion_point(field_mutable_list:eve_tools.EveTPMResponse.OutputFiles)
  return &outputfiles_;
}
const ::google::protobuf::RepeatedPtrField< ::eve_tools::File >&
EveTPMResponse::outputfiles() const {
  // @@protoc_insertion_point(field_list:eve_tools.EveTPMResponse.OutputFiles)
  return outputfiles_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace eve_tools

// @@protoc_insertion_point(global_scope)
